<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://code.alibabatech.com/schema/dubbo 
		http://code.alibabatech.com/schema/dubbo/dubbo.xsd 
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"  default-autowire="byName">
    
    <!-- 消费方应用名称信息，这个相当于起一个名字，我们dubbo管理页面比较清晰是哪个应用调用的,保持唯一性 -->  
     <dubbo:application name="consumer-of-helloworld-app"  />   
       
       <!-- 使用zookeeper注册中心发现暴露的服务地址 -->    
     <dubbo:registry address="zookeeper://192.168.31.97:2181" check="false"/>
       
       <!-- 生成远程服务代理，可以和本地bean一样使用demoService，该interface需要与服务端暴露的服务interface保持一致，该id已注入Spring -->
	 <dubbo:reference id="userService" interface="com.jk.service.UserService"  check="false"  />
	 <dubbo:reference id="treeService" interface="com.jk.service.TreeService"  check="false"  />
	 <dubbo:reference id="wqAccountManageService" interface="com.jk.service.WqAccountManageService"  check="false"  />
	 <dubbo:reference id="wqPeopleNewsService" interface="com.jk.service.WqPeopleNewsService"  check="false"  />
	 <dubbo:reference id="wqQyNewsService" interface="com.jk.service.WqQyNewsService"  check="false"  />
	 <dubbo:reference id="wqJgNewsService" interface="com.jk.service.WqJgNewsService"  check="false"  />
	<dubbo:reference id="personalService" interface="com.jk.service.PersonalService"  check="false"  />
	<dubbo:reference id="creditorService" interface="com.jk.service.CreditorService"  check="false"  />
	<dubbo:reference id="zxsjkservice" interface="com.jk.service.zxsJkService"  check="false"  />
	<dubbo:reference id="repaymentsService" interface="com.jk.service.RepaymentsService"  check="false"  />
	<dubbo:reference id="qUserService" interface="com.jk.service.QUserService"  check="false"  />
	<dubbo:reference id="qTreeService" interface="com.jk.service.QTreeService"  check="false"  />
	<dubbo:reference id="protocolService" interface="com.jk.service.ProtocolService"  check="false"  />
	<dubbo:reference id="logService" interface="com.jk.service.LogService" check="false"  />
	<dubbo:reference id="companyService" interface="com.jk.service.CompanyService"  check="false"  />
	<dubbo:reference id="financeService" interface="com.jk.service.FinanceService"  check="false"  />
	<dubbo:reference id="zxsczService" interface="com.jk.service.zxsCZService"  check="false"  />
	<dubbo:reference id="wqHighchartsService" interface="com.jk.service.WqHighchartsService"  check="false"  />
	<dubbo:reference id="collectionService" interface="com.jk.service.CollectionService"  check="false"  />
	<dubbo:reference id="solrService" interface="com.jk.service.SolrService"  check="false"  timeout="30000"/>

	<dubbo:reference id="investService" interface="com.jk.service.InvestService"  check="false"  />
	<!--  <dubbo:consumer check="false" /> -->
</beans>  